//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.06 at 05:40:56 PM CEST 
//


package org.geotools.app_schema;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 *         
 *       Use this element _only_ if you're going to do polymorphic mappings. You don't need to
 *       specify each and every namespace used in the community schemas in this section, since they'll
 *       be loaded by the schema parser.
 *       Thus, this section is just needed at the mappings configuration parsing stage, and only if you
 *       need complex datastore to assign a feature property which is not of the specific type stated
 *       in the schema for that property, but of a derivate type.
 *       For example, if you have:
 *       <xs:complexType name="MyFeatureType">
 *       	<xs:complexContent>
 *       		<xs:extension base="gml:AbstractFeatureType">
 *       			<xs:sequence>
 *       				<xs:element name="station" type="myns:MyBaseType"/>
 *                 </xs:sequence>
 *             </xs:extension>
 *         </xs:complexContent>
 *       </xs:complexType>
 * 
 *       Now, say that myns:MyBaseType is abstract and at runtime you want that MyFeatureType instances
 *       being assigned an instance of myns2:MyDerivedType, which extends myns:MyBaseType.
 *       If you don't specify that situation in the mappings config file, complex datastore will have no
 *       way of inferring that, so the way of telling complex datastore to create an instance of
 *       myns2:MyDerivedType instead of the one declared in the schema, is by using  a 
 *       <targetElement>myns2:MyDerivedType</targetElement> tag in the attribute mapping (see 
 *       TypeMappingsPropertyType documentation below).
 *       So, for the mappings parser to recognize which type the instance should actually be, you
 *       need to declare the namespace here, as well as in the actual xsd schema.
 *     
 *       
 * 
 * <p>Java class for NamespacesPropertyType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="NamespacesPropertyType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="Namespace" maxOccurs="unbounded" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="prefix" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                   &lt;element name="uri" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "NamespacesPropertyType", propOrder = {
    "namespace"
})
public class NamespacesPropertyType {

    @XmlElement(name = "Namespace")
    protected List<NamespacesPropertyType.Namespace> namespace;

    /**
     * Gets the value of the namespace property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the namespace property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNamespace().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NamespacesPropertyType.Namespace }
     * 
     * 
     */
    public List<NamespacesPropertyType.Namespace> getNamespace() {
        if (namespace == null) {
            namespace = new ArrayList<NamespacesPropertyType.Namespace>();
        }
        return this.namespace;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="prefix" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *         &lt;element name="uri" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "prefix",
        "uri"
    })
    public static class Namespace {

        @XmlElement(required = true)
        protected String prefix;
        @XmlElement(required = true)
        protected String uri;

        /**
         * Gets the value of the prefix property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getPrefix() {
            return prefix;
        }

        /**
         * Sets the value of the prefix property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setPrefix(String value) {
            this.prefix = value;
        }

        /**
         * Gets the value of the uri property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getUri() {
            return uri;
        }

        /**
         * Sets the value of the uri property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setUri(String value) {
            this.uri = value;
        }

    }

}
